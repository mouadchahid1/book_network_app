name: BNS backend api pipeline

on:
  push:
    branches:
      - c1/pipeline
    paths:
      - book-network/**
      - Docker/backEnd/**
      - 'docker-composer.yml'
      - .github/workflows/*-backend.yml
jobs:
  compile:
    name: Compile project
    runs-on: ubuntu-latest #self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: 'corretto'
      - name: Compile Project
        run: |
          cd book-network
          ./mvnw clean compile
  
  
  
  

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: 'corretto'
      - name: Run Unit test
        run: |
          cd book-network
          ./mvnw clean test 

  build:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: [ unit-tests, compile ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: 'corretto'
      - name: Build Backend
        run: |
          cd book-network
          ./mvnw clean package -DskipTests

  build-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    depends-on: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Jdk
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: 'corretto'
      - name: build project
        run: |
          cd book-network
            ./mvnw clean package -DskipTests
      - name: Extraction Project version
        id: extract_version
        run: |
          cd book-network
           echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & Push to dockerHub
        uses: docker/build-push-action@v5
        with:
          context: Docker/backEnd
          file: Docker/backEnd/Dockerfile
          push: true
          platform: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bns-api:${{ steps.extract_version.outputs.VERSION }}
          build-args: |
            PROFILE=dev
            APP_VERSION=${{steps.extract_version.outputs.VERSION}}

  deploy:
    name: Deploy backend
    runs-on: ubuntu-latest
    needs: [ build-image ]
    steps:
      - name: Create Deployment folder
        run: ssh ${{secret.SSH_USERNAME}}@${{secret.SSH_HOST}} "mkdir -p ci-cd"

      - name: Copy the docker composer file
        run: scp docker-composer.yml ${{secret.SSH_USERNAME}}@${{secret.SSH_HOST}}:ci-cd/docker-composer.yml

      - name: Set ENV variable and deploy
        run: |
          ssh ${{secret.SSH_USERNAME}}@${{secret.SSH_HOST}} <<EOF
          export EMAIL_HOSTNAME=${{ secret.EMAIL_HOSTNAME }}
          export EMAIL_USERNAME=${{ secret.EMAIL_USERNAME }}
          export EMAIL_PASSWORD=${{ secret.EMAIL_PASSWORD }}
          cd ci-cd
          docker-compose -f docker-composer.yml pull -q
          docker-compose -f docker-composer.yml up -d
          
          EOF
